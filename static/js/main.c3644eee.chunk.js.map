{"version":3,"sources":["utils/index.js","Contexts/ColorsContext.js","Color.js","App.js","serviceWorker.js","index.js"],"names":["Utils","randomColor","pickInBetween","getRandom","Math","floor","random","length","red","green","blue","calculateHue","color","r","substr","g","b","hue","parseInt","copyToClipboard","string","el","document","createElement","value","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","isMobileDevice","a","check","navigator","userAgent","vendor","window","opera","test","ColorsContext","createContext","Color","props","hex","border","useContext","colors","setColors","themeColorsLimite","setAddButtonStatus","className","backgroundColor","borderColor","title","onClick","remove","filter","App","useState","bckColor","setBckColor","clipboardStatus","setClipboardStatus","videoStatus","setVideoStatus","addButtonStatus","isMobile","handleMobileDemo","event","preventDefault","useEffect","setTimeout","Provider","href","width","height","src","frameBorder","allow","allowFullScreen","role","aria-label","display","vibrate","disabled","map","index","key","Boolean","location","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c3644eee.chunk.js","sourcesContent":["const Utils = {\n  randomColor: () => {\n    const pickInBetween = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n    \n    const getRandom = () => {\n      return Math.floor(Math.random() * pickInBetween.length);\n    }\n    const red = getRandom();\n    const green = getRandom();\n    const blue = getRandom();\n  \n    const getColor = pickInBetween[red]+pickInBetween[green]+pickInBetween[blue];\n  \n    return getColor;\n  },\n  calculateHue: (color) => {\n    // get the R G B value from HEX color and double it\n    // in order to have a 6 digit HEX color\n    const r = color.substr(0,1)+color.substr(0,1)\n    const g = color.substr(1,1)+color.substr(1,1)\n    const b = color.substr(2,2)+color.substr(2,2)\n    // transform de 2 digit r, g, b value with parseInt\n    // to get the 255 value\n    const red = parseInt(r, 16)\n    const green = parseInt(g, 16)\n    const blue = parseInt(b, 16)\n    // hue caluculation found on wikipedia\n    const hue = red*0.299 + green*0.587 + blue*0.114;\n    if(color.length === 3) {\n      switch (true) {\n        case (hue > 150):\n          return 'black';\n        default:\n          return 'white';\n      }\n    }\n  },\n  copyToClipboard: (string) => {\n    const el = document.createElement('textarea');\n    el.value = string;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    const selected = \n      document.getSelection().rangeCount > 0 ? document.getSelection().getRangeAt(0) : false;\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    if (selected) {\n      document.getSelection().removeAllRanges();\n      document.getSelection().addRange(selected);\n    }\n  },\n  isMobileDevice: () => {\n    /* eslint-disable no-useless-escape */\n    let check = false;\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\n    return check;\n  }\n}\n\nexport default Utils;","import { createContext } from 'react';\n\nexport const ColorsContext = createContext(null);","import React, { useContext } from 'react';\nimport { ColorsContext } from './Contexts/ColorsContext';\nimport Utils from './utils';\nimport { FaRegCopy, FaTrashAlt } from 'react-icons/fa';\n\nconst Color = (props) => {\n  const { hex, border } = props;\n  const { colors, setColors, themeColorsLimite ,setAddButtonStatus } = useContext(ColorsContext);\n\n  const handleRemove = () => {\n    const remove = colors.filter(color => color !== hex);\n    setColors(remove);\n    colors.length <= themeColorsLimite+1 ? setAddButtonStatus(false) : setAddButtonStatus(true);\n  }\n\n  return (\n    <div className=\"saved-color\" style={{ backgroundColor: '#' + hex, borderColor: border ? 'transparent' : Utils.calculateHue(hex) }}>\n      <span style={{ color: Utils.calculateHue(hex) }}>#{hex}</span>\n      <button\n        className=\"saved-color-button clipboard\"\n        title=\"Copy to clipboard\"\n        style={{ color: Utils.calculateHue(hex) }}\n        onClick={(() => Utils.copyToClipboard('#' + hex))}>\n        <FaRegCopy />\n      </button>\n      <button\n        className=\"saved-color-button remove\"\n        title=\"Remove the color\"\n        style={{ color: Utils.calculateHue(hex) }}\n        onClick={handleRemove}>\n        <FaTrashAlt />\n      </button>\n    </div>\n  )\n}\n\nexport default Color;","import React, { useState, useEffect } from 'react';\nimport { FaRedoAlt, FaRegCopy, FaEllipsisV, FaPlus } from 'react-icons/fa';\n\nimport Utils from './utils';\nimport { ColorsContext } from './Contexts/ColorsContext';\nimport './App.css';\n\nimport Color from './Color';\n\nconst App = () => {\n  let [bckColor, setBckColor] = useState(Utils.randomColor())\n  let [clipboardStatus, setClipboardStatus] = useState(false)\n  let [videoStatus, setVideoStatus] = useState(false);\n  let [colors, setColors] = useState([])\n  let [addButtonStatus, setAddButtonStatus] = useState(false)\n  let [themeColorsLimite] = useState(4)\n\n  const isMobile = Utils.isMobileDevice();\n\n  const refreshColor = (event) => {\n    setBckColor(Utils.randomColor());\n    if(navigator.vibrate) {\n      navigator.vibrate([85, 50, 85])\n    }\n  }\n\n  const hexToClopBoard = (event) => {\n    Utils.copyToClipboard('#' + bckColor)\n    setClipboardStatus(true);\n  }\n\n  const ColorPalette = () => {\n    return (\n      <div className=\"theme-colors\">\n        {colors.map((color, index) => <Color key={index} hex={color} border={'none'} />)}\n      </div>\n    )\n  }\n\n  const addColorToFav = () => {\n    setColors([...colors, bckColor]);\n    setBckColor(Utils.randomColor());\n    colors.length < themeColorsLimite ? setAddButtonStatus(false) : setAddButtonStatus(true);\n  }\n\n  const handleMobileDemo = (event) => {\n    event.preventDefault();\n    if (videoStatus) {\n      setVideoStatus(false)\n    } else {\n      setVideoStatus(true)\n    }\n  }\n\n  const MobileWarning = () => {\n    return (\n      <div\n        className=\"mobile warning\"\n        style={{ color: `#${bckColor}`, backgroundColor: Utils.calculateHue(bckColor) }}\n      ><a href=\"/#what-can-i-do\" onClick={handleMobileDemo}>See what you can do on a computer.</a></div>\n    )\n  }\n\n  const DesktopPreview = () => {\n    return (\n      <div\n        className=\"desktop in\"\n        style={{ color: `#${bckColor}`,backgroundColor: Utils.calculateHue(bckColor) }}\n      ><a href=\"/#what-can-i-do\" onClick={handleMobileDemo}>See how to use COLORED.</a></div>\n    )\n  }\n\n  const VideoDemo = () => {\n    return (\n      <div className={videoStatus ? 'wrapper open' : 'wrapper close'} onClick={handleMobileDemo}>\n        <div className=\"video-wrapper\">\n          <iframe\n            title=\"video\"\n            width=\"560\"\n            height=\"349\"\n            src=\"https://www.youtube.com/embed/CrRG_rF6o4M\"\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen=\"allowfullscreen\">\n          </iframe>\n        </div>\n      </div>\n    )\n  }\n\n  useEffect(() => {\n    if (clipboardStatus) {\n      window.setTimeout(() => { setClipboardStatus(false) }, 2000);\n    }\n  }, [clipboardStatus])\n\n  return (\n    <ColorsContext.Provider value={{ colors, setColors, bckColor, setBckColor, themeColorsLimite, setAddButtonStatus }}>\n      <div className=\"app\" style={{ backgroundColor: '#' + bckColor }}>\n        {isMobile && <MobileWarning />}\n        {!isMobile && <DesktopPreview />}\n        <VideoDemo />\n        <div\n          className={clipboardStatus ? 'message show' : 'message hide'}\n          style={{ color: Utils.calculateHue(bckColor) }}\n        >\n          <span role=\"img\" aria-label=\"clipboard\">📋 </span>Copied!\n        </div>\n        <header style={{display: 'none'}}>\n          <nav>\n            <ul>\n              <li className=\"main\"><FaEllipsisV /></li>\n            </ul>\n          </nav>\n        </header>\n        <div className=\"app-color\" style={{ color: Utils.calculateHue(bckColor) }}>\n          <h1>{`#${bckColor}`}</h1>\n          <div className=\"actions\">\n            <button\n              className={`button get-random-color ${Utils.calculateHue(bckColor)}`}\n              title=\"Give me another ramdom color\"\n              style={{ color: Utils.calculateHue(bckColor) }}\n              onClick={refreshColor}\n            ><FaRedoAlt /> <span>Another color</span>\n            </button>\n            <button\n              className={`button copy-to-clipboard  ${Utils.calculateHue(bckColor)}`}\n              title={`Copy #${bckColor} to clipboard`}\n              style={{ color: Utils.calculateHue(bckColor) }}\n              onClick={hexToClopBoard}>\n              <FaRegCopy /> <span>Copy to clipboard</span>\n            </button>\n            {!isMobile && (\n              <button\n                className={`button add-to-theme  ${Utils.calculateHue(bckColor)}`}\n                title={`Add #${bckColor} to your color theme`}\n                style={{ color: Utils.calculateHue(bckColor) }}\n                onClick={addColorToFav}\n                disabled={addButtonStatus}>\n                <FaPlus /> <span>Add to theme</span>\n              </button>\n            )}\n          </div>\n        </div>\n        {!isMobile && <ColorPalette />}\n      </div>\n    </ColorsContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}